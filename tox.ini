# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist =
    py37
    docs
    style
skip_missing_interpreters = True

[testenv]
description = Run unit tests with pytest
whitelist_externals =
    pytest
extras = voice, test
commands =
    python -m compileall ./redbot/cogs
    pytest

[testenv:postgres]
description = Run pytest with PostgreSQL backend
whitelist_externals =
    pytest
extras = voice, test, postgres
setenv =
    RED_STORAGE_TYPE=postgres
passenv =
    RED_POSTGRES_HOST
    RED_POSTGRES_PORT
    RED_POSTGRES_USER
    RED_POSTGRES_PASSWORD
    RED_POSTGRES_DATABASE
commands =
    pytest

[testenv:mongo]
description = Run pytest with MongoDB backend
whitelist_externals =
    pytest
extras = voice, test, mongo
setenv =
    RED_STORAGE_TYPE=mongo
passenv =
    RED_MONGO_URI
    RED_MONGO_HOST
    RED_MONGO_PORT
    RED_MONGO_USER
    RED_MONGO_PASSWORD
    RED_MONGO_DATABASE
commands =
    pytest

[testenv:docs]
description = Attempt to build docs with sphinx-build
whitelist_externals =
    sphinx-build
basepython = python3.7
extras = docs, mongo
commands =
    sphinx-build -d "{toxworkdir}/docs_doctree" docs "{toxworkdir}/docs_out/html" -W -bhtml
    sphinx-build -d "{toxworkdir}/docs_doctree" docs "{toxworkdir}/docs_out/linkcheck" -W -blinkcheck
    sphinx-build -d "{toxworkdir}/docs_doctree" docs "{toxworkdir}/docs_out/doctest" -W -bdoctest

[testenv:style]
description = Stylecheck the code with black to see if anything needs changes.
whitelist_externals =
    make
setenv =
    # This is just for Windows
    # Prioritise make.bat over any make.exe which might be on PATH
    PATHEXT=.BAT;.EXE
basepython = python3.7
extras = style
commands =
    make stylecheck
